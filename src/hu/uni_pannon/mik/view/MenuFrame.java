package hu.uni_pannon.mik.view;

import hu.uni_pannon.mik.db_transactions.DBConnectSingleton;

import hu.uni_pannon.mik.controller.MenuController;
import hu.uni_pannon.mik.controller.WasherPickerController;
import hu.uni_pannon.mik.model.UsersModel;
import hu.uni_pannon.mik.model.WmachinesModel;
import java.awt.Cursor;
import java.awt.Window;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;

import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author omar
 */
public class MenuFrame extends javax.swing.JFrame{

    private MenuController menuController;
    private WasherPickerController washerPickerController;
    private DefaultTableModel tableModel;
    private WmachinesModel wmachinesModel;
    private AddWasherFrame addWasherFrame;

    
    public MenuFrame() {

        menuController = new MenuController(tableModel, this);
        washerPickerController = new WasherPickerController(tableModel, this);

        initComponents();

        fillWmTable();
        menuController.fillWashesTable();

        this.getTable().getTableHeader().setReorderingAllowed(false);
        this.getTable().getTableHeader().setResizingAllowed(false);
        this.getTable().setCellSelectionEnabled(true);

        this.getWmTable().getTableHeader().setReorderingAllowed(false);
        this.getWmTable().getTableHeader().setResizingAllowed(false);
        this.getWmTable().setCellSelectionEnabled(true);
        this.getWmTable().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        

        washerPickerController.addListener();

        this.setLocationRelativeTo(null);
        //menuController.setColumnHeaders();
        /*washerList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        MenuController menuController = new MenuController(this);
        Vector<String[]> washers = new Vector<>();
        DefaultListModel<String> model = new DefaultListModel<>();
        WmachinesModel wmachine = WmachinesModel.getInstance();
        try {
            washers = menuController.listWashersQuery();
        } catch (SQLException ex) {
            Logger.getLogger(MenuFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (String[] washer : washers) {
            model.addElement(washer[1]);
            wmachine.addToMap(Integer.parseInt(washer[0]), washer[1]);
        }
        wmachine.printHash();
        washerList.setModel(model);
        washerList.setSelectedIndex(0);
        washerNameLabel.setText(washerList.getSelectedValue() + " machine");

        weekTable.setModel(WeekTableModel.getInstance());
        weekTable.getTableHeader().setReorderingAllowed(false);
        weekTable.setCellSelectionEnabled(true);*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelClose = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelMin = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        bookAppointmentButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        weekTable = new JTable(menuController.getTableModel());
        logoutButton = new javax.swing.JButton();
        appointmentLabel = new javax.swing.JLabel();
        addWasherButton = new javax.swing.JButton();
        wmaschineLabel = new javax.swing.JLabel();
        deleteWmButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        wmSelector = new JTable(washerPickerController.getTableModel());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(248, 148, 6));

        jLabelClose.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelClose.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose.setText("X");
        jLabelClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Wmaschines booking app");

        jLabelMin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelMin.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMin.setText("-");
        jLabelMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelMinMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelMinMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelMinMouseExited(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(44, 62, 80));

        bookAppointmentButton.setBackground(new java.awt.Color(51, 204, 0));
        bookAppointmentButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bookAppointmentButton.setForeground(new java.awt.Color(255, 255, 255));
        bookAppointmentButton.setText("Book appointment");
        bookAppointmentButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookAppointmentButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bookAppointmentButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bookAppointmentButtonMouseExited(evt);
            }
        });
        bookAppointmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookAppointmentButtonActionPerformed(evt);
            }
        });

        weekTable.setModel(menuController.getTableModel());
        jScrollPane2.setViewportView(weekTable);

        logoutButton.setBackground(new java.awt.Color(242, 38, 19));
        logoutButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        logoutButton.setForeground(new java.awt.Color(255, 255, 255));
        logoutButton.setText("Logout");
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutButtonMouseExited(evt);
            }
        });
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });
        logoutButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                logoutButtonKeyPressed(evt);
            }
        });

        appointmentLabel.setBackground(new java.awt.Color(248, 148, 6));
        appointmentLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        appointmentLabel.setForeground(new java.awt.Color(255, 255, 255));
        appointmentLabel.setText("2. Select an appointment range!");
        appointmentLabel.setHorizontalAlignment(SwingConstants.CENTER);
        appointmentLabel.setOpaque(true);

        addWasherButton.setBackground(new java.awt.Color(34, 167, 240));
        addWasherButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addWasherButton.setForeground(new java.awt.Color(255, 255, 255));
        addWasherButton.setText("Add washer");
        addWasherButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addWasherButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addWasherButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addWasherButtonMouseExited(evt);
            }
        });
        addWasherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWasherButtonActionPerformed(evt);
            }
        });

        wmaschineLabel.setBackground(new java.awt.Color(248, 148, 6));
        wmaschineLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        wmaschineLabel.setForeground(new java.awt.Color(255, 255, 255));
        wmaschineLabel.setText("1. Select a waschmaschine!");
        wmaschineLabel.setHorizontalAlignment(SwingConstants.CENTER);
        wmaschineLabel.setOpaque(true);

        deleteWmButton.setBackground(new java.awt.Color(242, 38, 19));
        deleteWmButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteWmButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteWmButton.setText("Delete selected wm.");
        deleteWmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteWmButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteWmButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteWmButtonMouseExited(evt);
            }
        });
        deleteWmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteWmButtonActionPerformed(evt);
            }
        });
        deleteWmButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                deleteWmButtonKeyPressed(evt);
            }
        });

        wmSelector.setModel(washerPickerController.getTableModel());
        wmSelector.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wmSelectorMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(wmSelector);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteWmButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(wmaschineLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addWasherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bookAppointmentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(appointmentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(appointmentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wmaschineLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookAppointmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addWasherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteWmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelMin)
                .addGap(18, 18, 18)
                .addComponent(jLabelClose)
                .addGap(21, 21, 21))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMin, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jLabelClose)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseClicked
        try {
            DBConnectSingleton.disconnect();

        } catch (Exception ex) {
            Logger.getLogger(MenuFrame.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(0);

    }//GEN-LAST:event_jLabelCloseMouseClicked

    private void jLabelMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseClicked

        this.setState(JFrame.ICONIFIED);

    }//GEN-LAST:event_jLabelMinMouseClicked

    private void bookAppointmentButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookAppointmentButtonMouseClicked
        int[] rows = weekTable.getSelectedRows();
        int column = weekTable.getSelectedColumn();
            menuController.bookWashTime(column, rows);
    }//GEN-LAST:event_bookAppointmentButtonMouseClicked

    private void bookAppointmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookAppointmentButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookAppointmentButtonActionPerformed

    private void logoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseClicked
        MenuFrame.this.dispose();
        new LoginFrame().setVisible(true);
    }//GEN-LAST:event_logoutButtonMouseClicked

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        for (Window window : java.awt.Window.getWindows()) {
            window.dispose();
        }
        new LoginFrame().setVisible(true);

    }//GEN-LAST:event_logoutButtonActionPerformed

    private void addWasherButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addWasherButtonMouseClicked
    }//GEN-LAST:event_addWasherButtonMouseClicked

    private void addWasherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWasherButtonActionPerformed
        new AddWasherFrame().setVisible(true);
        
    }//GEN-LAST:event_addWasherButtonActionPerformed

    private void addWasherButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addWasherButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_addWasherButtonMouseEntered

    private void addWasherButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addWasherButtonMouseExited
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_addWasherButtonMouseExited

    private void bookAppointmentButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookAppointmentButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_bookAppointmentButtonMouseEntered

    private void bookAppointmentButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookAppointmentButtonMouseExited
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_bookAppointmentButtonMouseExited

    private void logoutButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_logoutButtonMouseEntered

    private void logoutButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseExited
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_logoutButtonMouseExited

    private void jLabelMinMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabelMinMouseEntered

    private void jLabelMinMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseExited
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jLabelMinMouseExited

    private void jLabelCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabelCloseMouseEntered

    private void jLabelCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseExited
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jLabelCloseMouseExited

    private void logoutButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_logoutButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            logoutButton.doClick();
        }
    }//GEN-LAST:event_logoutButtonKeyPressed

    private void deleteWmButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteWmButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteWmButtonMouseClicked

    private void deleteWmButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteWmButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));    }//GEN-LAST:event_deleteWmButtonMouseEntered

    private void deleteWmButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteWmButtonMouseExited
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_deleteWmButtonMouseExited

    private void deleteWmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteWmButtonActionPerformed
        deleteSelectedWasher(washerPickerController.getSelectedWasher());
    }//GEN-LAST:event_deleteWmButtonActionPerformed

    private void deleteWmButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deleteWmButtonKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteWmButtonKeyPressed

    private void wmSelectorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wmSelectorMouseClicked
            int row = wmSelector.getSelectedRow();
            int column = wmSelector.getSelectedColumn();
            String valueInCell = (String) wmSelector.getValueAt(row, column);
            washerPickerController.setSelectedWasher(valueInCell);
            ((DefaultTableModel)weekTable.getModel()).getDataVector().removeAllElements();
            menuController.fillWashesTable();
            weekTable.setModel(menuController.getTableModel());
            ((DefaultTableModel)weekTable.getModel()).fireTableDataChanged();
    }//GEN-LAST:event_wmSelectorMouseClicked

    public JButton getBookAppointmentButton() {
        return bookAppointmentButton;
    }

    public JTable getTable() {
        return weekTable;
    }

    public JTable getWmTable() {
        return wmSelector;
    }

    public WasherPickerController getWasherPickerController() {
        return washerPickerController;
    }

    public void setRowValue(Object[] wmaschine) {
        DefaultTableModel model = (DefaultTableModel) this.getWmTable().getModel();
        model.addRow(wmaschine);
    }

    public void fillWmTable() {
        try {
            String query = "SELECT * FROM wmachines";
            ResultSet resultSet = DBConnectSingleton.getStatement().executeQuery(query);

            while (resultSet.next()) {
                int idwmachines = Integer.parseInt(resultSet.getString(1));
                String name = resultSet.getString(2);
                String description = resultSet.getString(3);
                String dateOfInsertion = resultSet.getString(4);

                WmachinesModel wm = new WmachinesModel(idwmachines, name,
                        description, dateOfInsertion);

                Object[] wmaschine = {name};
                setRowValue(wmaschine);
            }
        } catch (SQLException ex) {
            Logger.getLogger(WasherPickerController.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void deleteSelectedWasher(String name) {
        try {
            String query = "DELETE FROM wmachines WHERE name = '" + name + "';";
            System.out.println(query);
            DBConnectSingleton.getStatement().executeUpdate(query);
        } catch (SQLException ex) {
            Logger.getLogger(WasherPickerController.class.getName()).log(Level.SEVERE, null, ex);
        }

        DefaultTableModel model = (DefaultTableModel) this.getWmTable().getModel();
        model.setRowCount(0);
        fillWmTable();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addWasherButton;
    private javax.swing.JLabel appointmentLabel;
    private javax.swing.JButton bookAppointmentButton;
    private javax.swing.JButton deleteWmButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton logoutButton;
    private javax.swing.JTable weekTable;
    private javax.swing.JTable wmSelector;
    private javax.swing.JLabel wmaschineLabel;
    // End of variables declaration//GEN-END:variables
}
